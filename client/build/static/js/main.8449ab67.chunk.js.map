{"version":3,"sources":["components/GlobalStyles.tsx","components/Layout/components/Header/Header.style.ts","components/Layout/components/Header/Header.tsx","components/Layout/components/Footer/Footer.style.tsx","components/Layout/components/Footer/Footer.tsx","components/Layout/components/Content/Content.style.ts","components/Layout/components/Content/Content.tsx","components/Layout/components/Sidebar/Sidebar.style.ts","components/Layout/components/Sidebar/Sidebar.tsx","components/Layout/Layout.style.ts","components/Layout/Layout.tsx","pages/SigIn/SigIn.style.ts","components/Select/Select.tsx","components/ErrorControl/ErrorControl.style.ts","components/ErrorControl/ErrorControl.tsx","components/TitleControl/TitleControl.style.ts","components/TitleControl/TitleControl.tsx","components/Submit/Submit.style.ts","components/Submit/Submit.tsx","pages/SigIn/SigIn.tsx","pages/Main/Main.style.ts","pages/Main/Main.tsx","pages/NotFound/NotFound.tsx","components/App.tsx","index.tsx","assets/font/Gingham.woff2"],"names":["GlobalStyles","styles","css","gingham","active","hidden","Wrapper","styled","p","show","Header","state","scrollPos","this","props","sticky","window","addEventListener","handleScroll","removeEventListener","setState","document","body","getBoundingClientRect","top","children","PureComponent","defaultProps","autobind","Footer","Content","Sidebar","oneBlock","Layout","React","Component","Entry","Form","Input","Field","FirstName","LastName","Email","NickName","TypeUser","SwitchWrap","Password","SubmitWrap","CustomSelect","placeholder","field","form","options","name","value","find","option","onChange","setFieldValue","Error","ErrorControl","msg","Title","TitleControl","Submit","type","defaultValues","singleLanguage","firstName","lastName","nickName","email","password","race","label","SigInSchema","Yup","shape","min","max","required","SigIn","initialValues","render","formikBag","component","Select","val","checked","values","onSubmit","actions","alert","JSON","stringify","setSubmitting","validationSchema","Main","NotFound","to","App","exact","path","ReactDOM","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8449ab67.chunk.js","sourcesContent":["import { css, Global } from '@emotion/core';\nimport React from 'react';\nimport gingham from '../assets/font/Gingham.woff2';\n\nconst GlobalStyles = () => {\n  return (\n    <Global\n      styles={css`\n        @font-face {\n          font-family: gingham;\n          src: url(${gingham}) format('woff2-variations'),\n            url(${gingham}) format('woff2'); /* for older browsers */\n          font-weight: normal;\n          font-style: normal;\n          font-display: swap;\n        }\n        *,\n        ::before,\n        ::after {\n          box-sizing: border-box;\n        }\n\n        ::before,\n        ::after {\n          text-decoration: inherit;\n          vertical-align: inherit;\n        }\n\n        html {\n          cursor: default;\n          line-height: 1.5;\n          -moz-tab-size: 4;\n          height: 100%;\n          tab-size: 4;\n          -webkit-tap-highlight-color: transparent;\n          -ms-text-size-adjust: 100%;\n          -webkit-text-size-adjust: 100%;\n          word-break: break-word;\n          font-family: gingham, system-ui,\n            /* macOS 10.11-10.12 \n            */ -apple-system,\n            /* Windows 6+ */ 'Segoe UI', /* Android 4+ */ 'Roboto',\n            /* Ubuntu 10.10+ */ 'Ubuntu', /* Gnome 3+ */ 'Cantarell',\n            /* KDE Plasma 5+ */ 'Noto Sans', /* fallback */ sans-serif,\n            /* macOS emoji */ 'Apple Color Emoji',\n            /* Windows emoji */ 'Segoe UI Emoji',\n            /* Windows emoji */ 'Segoe UI Symbol',\n            /* Linux emoji */ 'Noto Color Emoji';\n          font-variation-settings: 'wght' 1, 'wdth' 200, 'ital' 1, 'opsz' 100;\n        }\n\n        body {\n          margin: 0;\n          height: 100%;\n        }\n\n        dl dl,\n        dl ol,\n        dl ul,\n        ol dl,\n        ul dl {\n          margin: 0;\n        }\n\n        ol ol,\n        ol ul,\n        ul ol,\n        ul ul {\n          margin: 0;\n        }\n\n        hr {\n          height: 0;\n          overflow: visible;\n        }\n\n        main {\n          display: block;\n        }\n\n        nav ol,\n        nav ul {\n          list-style: none;\n          padding: 0;\n        }\n\n        pre {\n          font-family: monospace, monospace;\n          font-size: 1em;\n        }\n\n        a {\n          background-color: transparent;\n        }\n\n        abbr[title] {\n          text-decoration: underline;\n          text-decoration: underline dotted;\n        }\n\n        abbr[title] {\n          text-decoration: underline;\n          text-decoration: underline dotted;\n        }\n\n        code,\n        kbd,\n        samp {\n          font-family: monospace, monospace;\n          font-size: 1em;\n        }\n\n        small {\n          font-size: 80%;\n        }\n\n        audio,\n        canvas,\n        iframe,\n        img,\n        svg,\n        video {\n          vertical-align: middle;\n        }\n\n        audio,\n        video {\n          display: inline-block;\n        }\n\n        audio:not([controls]) {\n          display: none;\n          height: 0;\n        }\n\n        img {\n          border-style: none;\n        }\n\n        svg:not([fill]) {\n          fill: currentColor;\n        }\n\n        svg:not(:root) {\n          overflow: hidden;\n        }\n        table {\n          border-collapse: collapse;\n        }\n\n        button,\n        input,\n        select {\n          margin: 0;\n        }\n\n        button {\n          overflow: visible;\n          text-transform: none;\n        }\n\n        button,\n        [type='button'],\n        [type='reset'],\n        [type='submit'] {\n          -webkit-appearance: button;\n        }\n\n        fieldset {\n          border: 1px solid #a0a0a0;\n          padding: 0.35em 0.75em 0.625em;\n        }\n\n        input {\n          overflow: visible;\n        }\n\n        legend {\n          color: inherit;\n          display: table;\n          max-width: 100%;\n          white-space: normal;\n        }\n\n        select {\n          text-transform: none;\n        }\n\n        textarea {\n          margin: 0;\n          overflow: auto;\n          resize: vertical;\n        }\n\n        [type='checkbox'],\n        [type='radio'] {\n          padding: 0;\n        }\n\n        [type='search'] {\n          -webkit-appearance: textfield;\n          outline-offset: -2px;\n        }\n\n        ::-webkit-inner-spin-button,\n        ::-webkit-outer-spin-button {\n          height: auto;\n        }\n\n        ::-webkit-input-placeholder {\n          color: inherit;\n          opacity: 0.54;\n        }\n\n        ::-webkit-search-decoration {\n          -webkit-appearance: none;\n        }\n\n        ::-webkit-file-upload-button {\n          -webkit-appearance: button;\n          font: inherit;\n        }\n\n        ::-moz-focus-inner {\n          border-style: none;\n          padding: 0;\n        }\n\n        :-moz-focusring {\n          outline: 1px dotted ButtonText;\n        }\n\n        :-moz-ui-invalid {\n          box-shadow: none;\n        }\n\n        details {\n          display: block;\n        }\n\n        dialog {\n          background-color: white;\n          border: solid;\n          color: black;\n          display: block;\n          height: -moz-fit-content;\n          height: -webkit-fit-content;\n          height: fit-content;\n          left: 0;\n          margin: auto;\n          padding: 1em;\n          position: absolute;\n          right: 0;\n          width: -moz-fit-content;\n          width: -webkit-fit-content;\n          width: fit-content;\n        }\n\n        dialog:not([open]) {\n          display: none;\n        }\n\n        summary {\n          display: list-item;\n        }\n\n        canvas {\n          display: inline-block;\n        }\n\n        template {\n          display: none;\n        }\n\n        a,\n        area,\n        button,\n        input,\n        label,\n        select,\n        summary,\n        textarea,\n        [tabindex] {\n          -ms-touch-action: manipulation;\n          touch-action: manipulation;\n        }\n\n        [hidden] {\n          display: none;\n        }\n\n        [aria-busy='true'] {\n          cursor: progress;\n        }\n\n        [aria-controls] {\n          cursor: pointer;\n        }\n\n        [aria-disabled='true'],\n        [disabled] {\n          cursor: not-allowed;\n        }\n\n        [aria-hidden='false'][hidden] {\n          display: initial;\n        }\n\n        [aria-hidden='false'][hidden]:not(:focus) {\n          clip: rect(0, 0, 0, 0);\n          position: absolute;\n        }\n        code,\n        kbd,\n        samp,\n        pre {\n          font-family: gingham, /* macOS 10.10+ */ 'Menlo',\n            /* Windows 6+ */ 'Consolas', /* Android 4+ */ 'Roboto Mono',\n            /* Ubuntu 10.10+ */ 'Ubuntu Monospace',\n            /* KDE Plasma 5+ */ 'Noto Mono', /* KDE Plasma 4+ */ 'Oxygen Mono',\n            /* Linux/OpenOffice fallback */ 'Liberation Mono',\n            /* fallback */ monospace, /* macOS emoji */ 'Apple Color Emoji',\n            /* Windows emoji */ 'Segoe UI Emoji',\n            /* Windows emoji */ 'Segoe UI Symbol',\n            /* Linux emoji */ 'Noto Color Emoji';\n        }\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6 {\n          font-variation-settings: 'wght' 400, 'wdth' 300;\n        }\n        #root {\n          height: 100%;\n        }\n      `}\n    />\n  );\n};\n\nexport default GlobalStyles;\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nconst active = css`\n  visibility: visible;\n  transition: all 200ms linear;\n`;\n\nconst hidden = css`\n  visibility: hidden;\n  transition: all 200ms linear;\n  transform: translate(0, -100%);\n`;\n\nconst Wrapper = styled('header')`\n  grid-area: header;\n  height: 50px;\n  width: 100%;\n  position: fixed;\n  grid-area: header;\n  display: flex;\n  align-items: center;\n  padding: 5px;\n  background-color: #fff;\n  ${(p: { show: boolean }) => (p.show ? active : hidden)}\n`;\n\nexport default Wrapper;\n","import React, { PureComponent } from 'react';\nimport { autobind } from 'core-decorators';\nimport Wrapper from './Header.style';\n\nexport interface HeaderProps {\n  children: React.ReactNode;\n  fixed?: boolean;\n  sticky?: boolean;\n}\n\nexport interface HeaderState {\n  show: boolean;\n  scrollPos: 0;\n}\n\nclass Header extends PureComponent<HeaderProps> {\n  public static defaultProps: Partial<HeaderProps> = {\n    children: null,\n    sticky: false\n  };\n  public state = {\n    show: true,\n    scrollPos: 0\n  };\n\n  public componentDidMount() {\n    const { sticky } = this.props;\n    if (sticky) {\n      window.addEventListener('scroll', this.handleScroll);\n    }\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  @autobind\n  public handleScroll() {\n    const { scrollPos } = this.state;\n    const { sticky } = this.props;\n    if (sticky) {\n      this.setState({\n        scrollPos: document.body.getBoundingClientRect().top,\n        show: document.body.getBoundingClientRect().top > scrollPos\n      });\n    }\n  }\n\n  public render() {\n    const { children } = this.props;\n    const { show } = this.state;\n    return <Wrapper show={show}>{children}</Wrapper>;\n  }\n}\n\nexport default Header;\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled('footer')`\n  grid-area: footer;\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport Wrapper from './Footer.style';\n\ninterface FooterProps {\n  children?: React.ReactNode;\n}\n\nconst Footer: React.SFC<FooterProps> = (props: FooterProps) => {\n  return <Wrapper>{props.children}</Wrapper>;\n};\n\nFooter.defaultProps = {\n  children: null\n};\n\nexport default Footer;\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled('main')`\n  overflow: scroll;\n  grid-area: main;\n  border-radius: 10px;\n  border: 3px solid #35456b;\n  overflow-x: hidden;\n\n  ::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: black;\n    border-radius: 10px;\n  }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport Wrapper from './Content.style';\n\ninterface ContentProps {\n  children?: React.ReactNode;\n}\n\nconst Content: React.SFC<ContentProps> = (props: ContentProps) => {\n  return <Wrapper>{props.children}</Wrapper>;\n};\n\nContent.defaultProps = {\n  children: null\n};\n\nexport default Content;\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled('nav')`\n  grid-area: nav;\n  border: 3px solid #35456b;\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport Wrapper from './Sidebar.style';\n\ninterface SidebarProps {\n  children?: React.ReactNode;\n}\n\nconst Sidebar: React.SFC<SidebarProps> = (props: SidebarProps) => {\n  return <Wrapper>{props.children}</Wrapper>;\n};\n\nSidebar.defaultProps = {\n  children: null\n};\n\nexport default Sidebar;\n","import styled from '@emotion/styled';\n\ntype LayoutProps = {\n  oneBlock: boolean;\n};\n\nconst Wrapper = styled('div')<LayoutProps>`\n  min-height: 100%;\n  padding: 7px;\n  display: grid;\n  grid-template-areas: 'header header header' 'nav main aside';\n  grid-gap: 10px;\n  ${(p: LayoutProps) =>\n    p.oneBlock &&\n    `\n    grid-template-areas: 'header header header' 'main main main';\n    grid-template-columns: 1fr;\n  `}\n  grid-template-columns: minmax(200px, 0.3fr) minmax(320px, 1fr);\n  grid-template-rows: 50px 91vh;\n  @media (max-width: 640px) {\n    ${(p: LayoutProps) =>\n      p.oneBlock &&\n      `\n    grid-template-areas: 'header header header' 'main main main';\n    grid-template-columns: 1fr;\n  `}\n    grid-template-areas: 'header header header' 'nav nav nav' 'main main main';\n    grid-template-columns: 1fr;\n    grid-template-rows: 50px 40px 88vh;\n  }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Content from './components/Content';\nimport Sidebar from './components/Sidebar';\nimport Wrapper from './Layout.style';\n\nexport interface LayoutProps {\n  children: React.ReactNode;\n  oneBlock?: boolean;\n}\n\nclass Layout extends React.Component<LayoutProps> {\n  public static Header = Header;\n  public static Footer = Footer;\n  public static Content = Content;\n  public static Sidebar = Sidebar;\n  public static defaultProps: Partial<LayoutProps> = {\n    children: null\n  };\n  public render() {\n    const { children, oneBlock } = this.props;\n    return <Wrapper oneBlock={oneBlock}>{children}</Wrapper>;\n  }\n}\n\nexport default Layout;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Entry = styled(Form)`\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(5, 80px);\n  width: 70%;\n  margin: 0 auto;\n  padding: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nexport const Input = styled(Field)`\n  border: none;\n  border-bottom: 2px solid #300;\n  font-size: 24px;\n`;\n\nexport const FirstName = styled('div')`\n  grid-column: 1/3;\n  grid-row: 1/2;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const LastName = styled('div')`\n  grid-column: 3/5;\n  grid-row: 1/2;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const Email = styled('div')`\n  grid-column: 1/3;\n  grid-row: 2/3;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const NickName = styled('div')`\n  grid-column: 3/5;\n  grid-row: 2/3;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const TypeUser = styled('div')`\n  grid-column: 1/2;\n  grid-row: 3/4;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const SwitchWrap = styled('div')`\n  grid-column: 2/3;\n  grid-row: 3/4;\n  margin-left: 10px;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const Password = styled('div')`\n  grid-column: 3/5;\n  grid-row: 3/4;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const SubmitWrap = styled('div')`\n  grid-column: 4/5;\n  grid-row: 4/5;\n  display: flex;\n  justify-content: flex-end;\n`","import { FieldProps } from 'formik';\nimport React from 'react';\nimport Select from 'react-select';\n\ntype OptionsType<OptionType> = ReadonlyArray<OptionType>;\n\nexport type ValueType<OptionType> =\n  | OptionType\n  | OptionsType<OptionType>\n  | null\n  | undefined;\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface CustomSelectProps extends FieldProps {\n  options: OptionsType<Option>;\n  placeholder?: string;\n}\n\nexport const CustomSelect = ({\n  placeholder,\n  field,\n  form,\n  options\n}: CustomSelectProps) => {\n  const onChange = (option: ValueType<Option>) => {\n    form.setFieldValue(field.name, (option as Option).value);\n  };\n\n  const getValue = () => {\n    if (options) {\n      return options.find((option: any) => option.value === field.value);\n    } else {\n      return '' as any;\n    }\n  };\n\n  return (\n    <Select\n      name={field.name}\n      value={getValue()}\n      onChange={onChange}\n      placeholder={placeholder}\n      options={options}\n    />\n  );\n};\n\nexport default CustomSelect;\n","import styled from '@emotion/styled';\n\nconst Error = styled('div')`\n  color: tomato;\n`;\n\nexport default Error;\n","import React, { PureComponent } from 'react';\nimport { ErrorMessage } from 'formik';\nimport Error from './ErrorControl.style';\n\nexport interface ErrorComponentProps {\n  name: string;\n}\n\nclass ErrorControl extends PureComponent<ErrorComponentProps> {\n  public render() {\n    const { name } = this.props;\n    return (\n      <Error>\n        <ErrorMessage name={name}>\n          {msg => <i>{msg}</i>}\n        </ErrorMessage>\n      </Error>\n    );\n  }\n}\n\nexport default ErrorControl;\n","import styled from '@emotion/styled';\n\nconst Title = styled('div')`\n  padding: 5px;\n  padding-bottom: 5px;\n`;\n\nexport default Title;\n","import React from 'react';\nimport Title from './TitleControl.style';\n\ninterface TitleProps {\n  children?: React.ReactNode | string;\n}\n\nconst TitleControl: React.SFC<TitleProps> = (props: TitleProps) => {\n  const { children } = props;\n  return (\n    <Title>\n      {children}\n    </Title>\n  );\n};\n\nexport default TitleControl;\n","import styled from '@emotion/styled';\n\nconst Submit = styled('button')`\n  border: 2px solid #000;\n  background: none;\n  font-size: 20px;\n  padding: 10px;\n  border-radius: 5px;\n  text-transform: uppercase;\n  cursor: pointer;\n`;\n\nexport default Submit;\n","import React from 'react';\nimport Sbm from './Submit.style';\n\nexport interface SubmitProps extends React.HTMLAttributes<HTMLElement> {\n  children: string;\n  type?: 'submit' | 'reset' | 'button';\n}\n\nclass Submit extends React.Component<SubmitProps> {\n  public render() {\n    const { children, type } = this.props;\n    return <Sbm type={type}>{children}</Sbm>;\n  }\n}\n\nexport default Submit;\n","import React from 'react';\nimport Switch from 'react-switch';\nimport * as Yup from 'yup';\nimport {\n  Field,\n  Formik,\n  FormikActions,\n  FormikProps,\n} from 'formik';\nimport {\n  Entry,\n  Input,\n  FirstName,\n  LastName,\n  Email,\n  NickName,\n  TypeUser,\n  SwitchWrap,\n  Password,\n  SubmitWrap } from './SigIn.style';\nimport Select from '../../components/Select';\nimport Error from '../../components/ErrorControl';\nimport Title from '../../components/TitleControl';\nimport Submit from '../../components/Submit';\n\nexport interface FormValues {\n  singleLanguage: string;\n  firstName: string;\n  lastName: string;\n  nickName: string;\n  email: string;\n  password: string;\n  race: boolean;\n}\n\nconst defaultValues: FormValues = {\n  singleLanguage: '',\n  firstName: '',\n  lastName: '',\n  nickName: '',\n  email: '',\n  password: '',\n  race: false\n};\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' }\n];\n\nconst SigInSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, 'Слишком короткое имя!')\n    .max(50, 'Слишком Длинное имя!')\n    .required('Обезательное поле!'),\n  lastName: Yup.string()\n    .min(2, 'Слишком короткая фамилия!')\n    .max(50, 'Слишком длинная фамилия!')\n    .required('Обезательное поле!'),\n  nickName: Yup.string()\n    .min(2, 'Слишком короткий ник!')\n    .max(50, 'Слишком длинный ник!')\n    .required('Обезательное поле!') ,\n  email: Yup.string()\n    .min(2, 'Слишком короткое имя!')\n    .max(50, 'Слишком Длинное имя!'),\n  password: Yup.string()\n    .min(2, 'Слишком короткое имя!')\n    .max(50, 'Слишком Длинное имя!')\n    .required('Обезательное поле!')\n});\n\nconst SigIn = () => {\n  const onSubmit = (values: FormValues, actions: FormikActions<FormValues>) => {\n    alert(JSON.stringify(values, null, 2));\n    actions.setSubmitting(false);\n  };\n\n  const renderForm = (formikBag: FormikProps<FormValues>) => (\n    <Entry>\n      <FirstName>\n        <Title>Имя</Title>\n        <Input name=\"firstName\" />\n        <Error name=\"firstName\" />\n      </FirstName>\n      <LastName>\n        <Title>Фамилия</Title>\n        <Input name=\"lastName\" />\n        <Error name=\"lastName\" />\n      </LastName>\n      <NickName>\n        <Title>Никнейм</Title>\n        <Input type=\"nickName\" name=\"nickName\" />\n        <Error name=\"nickName\" />\n      </NickName>\n      <Email>\n        <Title>Почта</Title>\n        <Input type=\"email\" name=\"email\" />\n        <Error name=\"email\" />\n      </Email>\n      <TypeUser>\n        <Title>Выберите пользователя</Title>\n        <Field\n          name=\"typeUser\"\n          options={options}\n          component={Select}\n          placeholder=\"Выберите тип\"\n        />\n      </TypeUser>\n      <SwitchWrap>\n        <Title>Узнали? Согласны?</Title>\n        <Switch\n          onChange={val => {\n            formikBag.setFieldValue('race', val);\n          }}\n          checked={formikBag.values.race}\n        />\n      </SwitchWrap>\n      <Password>\n        <Title>Пароль</Title>\n        <Input type=\"password\" name=\"password\" />\n        <Error name=\"password\" />\n      </Password>\n      <SubmitWrap>\n        <Submit type=\"submit\">Запускаай!</Submit>\n      </SubmitWrap>\n    </Entry>\n  );\n\n  return (\n    <Formik\n      initialValues={defaultValues}\n      render={renderForm}\n      onSubmit={onSubmit}\n      validationSchema={SigInSchema}\n    />\n  );\n};\n\nexport default SigIn;\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled('div')``;\n\nexport default Wrapper;\n","import React from 'react';\nimport Wrapper from './Main.style';\n\ninterface MainProps {\n  children?: React.ReactNode | string;\n}\n\nconst Main: React.SFC<MainProps> = (props: MainProps) => {\n  // const { children } = props;\n  return (\n    <Wrapper>\n      Залогинен\n    </Wrapper>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { Redirect } from 'react-router';\n\nconst NotFound: React.SFC = () => {\n  return (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default NotFound;\n","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport GlobalStyles from './GlobalStyles';\nimport Layout from './Layout/Layout';\nimport SigIn from '../pages/SigIn';\nimport Main from '../pages/Main';\nimport NotFound from '../pages/NotFound';\n\ninterface AppProps {\n  children?: React.ReactNode;\n  oneBlock?: boolean;\n}\n\nconst App: React.SFC<AppProps> = (props: AppProps) => {\n  const { children, oneBlock } = props;\n  return (\n    <Fragment>\n      <GlobalStyles />\n      <Layout oneBlock={oneBlock}>\n        <Layout.Header sticky>(づ￣ ³￣)づ</Layout.Header>\n        <Layout.Content>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Main} />\n              <Route path=\"/sigin\" component={SigIn} />\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </Router>\n        </Layout.Content>\n        {oneBlock ? null : <Layout.Sidebar>{children}</Layout.Sidebar>}\n      </Layout>\n    </Fragment>\n  );\n};\n\nApp.defaultProps = {\n  children: null,\n  oneBlock: false\n};\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <StrictMode>\n    <App oneBlock />\n  </StrictMode>,\n  document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/Gingham.1efe0861.woff2\";"],"sourceRoot":""}